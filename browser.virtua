(set-setter! js-global (lambda (val name) (set-js-global! name val))) ;; doubleplusungood

(def alert (js-global "alert"))

(def *window* (js-global "window")) ;; eww
(def *document* (js-global "document"))
(def *body* (get-slot *document* "body"))

(define-js-methods
   "appendChild"
   "clear"
   "createElement"
   "createTextNode"
   "focus"
   "getElementById"
   "scrollTo"
   "setAttribute"
   )

(def TEXT (lambda (s) (createTextNode *document* s)))

(def define-dom-element
   (lambda (name)
      (def maker (vau (attrs . children) env
                    (def e (createElement *document* name))
                    (map-plist (lambda (aname avalue)
                                  (setAttribute e
                                                (strslice (to-string aname) 1)
                                                (eval avalue env)))
                               attrs)
                    (map (lambda (child)
                            (let ((ch (eval child env)))
                               (if (instance? ch String)
                                   (appendChild e (createTextNode *document* ch))
                                   (appendChild e ch))))
                         children)
                    e))
      (eval (list def (intern name) maker) *top-level-environment*)))

(def define-dom-elements
   (lambda names
      (map define-dom-element names)))

(define-dom-elements
   "DIV"
   "FORM"
   "INPUT"
   "P"
   "SPAN"
   )
